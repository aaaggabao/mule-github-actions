# name: Sandbox - Build and Deploy

# on:
#   push:
#     branches: master
# #normally you wouldn't be deploying master branch pushes to Sandbox,
# #but we're keeping things simple! üòÅ

# jobs:
#   buildAndDeploy:
#     runs-on: ubuntu-latest
#     steps:
# #first, we need to checkout our mule application's code
#       - name: Checkout repository
#         uses: actions/checkout@v2
#       - name: Build and deploy artifact to sandbox
# #run the maven deploy lifecycle. The -B indicated a batch process,
# #which reduces the amount of logging the deployment does
#         run: mvn -B deploy -DmuleDeploy -s .maven/settings.xml
# #Pass in the secrets we need for deployment as environment variables
#         env:
#           PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
#           PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
#           SANDBOX_CLIENT_ID: ${{ secrets.SANDBOX_CLIENT_ID }}
#           SANDBOX_CLIENT_SECRET: ${{ secrets.SANDBOX_CLIENT_SECRET }}
#           BUS_GROUP_ID: ${{ secrets.BUS_GROUP_ID }}

name: Build and Deploy to Dev Environment

on:
  push:
    branches: [feature/*]
  pull_request:
    branches: [feature/*]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 8
      - name: Test with Maven
        env:
          nexus_username: ${{ secrets.nexus_username }}
          nexus_password: ${{ secrets.nexus_password }}
          KEY: ${{ secrets.decryption_key }}
        run: mvn test --settings .maven/settings.xml -Dsecure.key="$KEY"
      - name: Upload MUnit reports
        uses: actions/upload-artifact@v3
        with:
          name: munit-test-reports
          path: target/site/munit/coverage/

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 8
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipMunitTests
      - name: Stamp artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Deploy to Sandbox
        env:
          USERNAME: ${{ secrets.platform_username }}
          PASSWORD: ${{ secrets.platform_password }}
          KEY: ${{ secrets.decryption_key }}
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DskipMunitTests -DmuleDeploy \
           -Dmule.artifact=$artifactName \
           -Danypoint.username="$USERNAME" \
           -Danypoint.password="$PASSWORD" \
           -Ddecryption.key="$KEY" \
           -Denv="Dev"
